Name: Austin Blanke
Email: austinblanke@csu.fullerton.edu

Description: First I needed to identify the variables used to construct the planes for viewFrustum culling. From my notes I had eqations for computing the planes however needed to transfer those equations into the program. The notes described the view frustum plane equations using vertices which then relied on dmin/dmax, rmin/rmax, or umin/umax which were not stored in the Camera.h file but were used to create the "debugging" drawViewFrustum. I couldn't use these variables to compute the normals and then check if the point minus the eyePosition (of camera) was inside the view frustum because I don't have access to the window's aspect ration and also there was an easier way. I then multiplied the clipPorjcetion matrix by the point to project it into space. However this did not work. I then realized that I didn't know what "space" the object/model (teapot's position) was located in. I then used the camera's lookAtMatrix() function to get the modelView transformation matrix to translate the teapot's position from model into view space. Now that the teapot's position is in the view space we can multiply by the clipProjection matrix to determine if the teapot's view position is within the viewFrustum or not.
